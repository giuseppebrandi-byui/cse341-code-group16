{
  "swagger": "2.0",
  "info": {
    "title": "Online Doctor API",
    "description": "An API to manage medicine practicioners, patients, newsletters and comments",
    "version": "1.0.0"
  },
  "host": "cse341-code-group16.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "flow": "authorizationCode",
      "authorizationUrl": "/login",
      "scopes": {
        "user": "Access user data"
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Gets a string with the logged in status",
        "description": "Gets a string with the logged in status",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/github/callback": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "summary": "Gets a string with the logged in status",
        "description": "Gets a string with the logged in status",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "summary": "Log in route",
        "description": "Log in route",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "summary": "Log out route",
        "description": "Log out route",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/patients/": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Gets all the patients",
        "description": "Gets all the patients",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Patient"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "No patients found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Creates a patient",
        "description": "Creates a patient",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Sophia Adams"
                },
                "dob": {
                  "type": "string",
                  "example": "09/18/79"
                },
                "email": {
                  "type": "string",
                  "example": "sophia.adams@example.com"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "567 Maple Street"
                    },
                    "city": {
                      "type": "string",
                      "example": "Villageland"
                    },
                    "zip": {
                      "type": "string",
                      "example": "67890"
                    }
                  }
                },
                "phone": {
                  "type": "string",
                  "example": "555-789-2345"
                },
                "insurer": {
                  "type": "string",
                  "example": "National"
                },
                "request": {
                  "type": "string",
                  "example": "Morbi posuere enim quis ornare laoreet. Donec imperdiet lacus odio, ut sollicitudin velit vulputate non. Sed mattis dolor purus, vel efficitur metus porta vel. Donec in aliquam nisl. Suspendisse venenatis eros molestie nunc eleifend, vel euismod elit tincidunt."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new patient has been added to the database"
          },
          "400": {
            "description": "Some error occurred while creating the patient record."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      }
    },
    "/patients/{id}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Gets a single patient by id",
        "description": "Gets a single patient by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          },
          "400": {
            "description": "Invalid record ID or no patient found with the entered id."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Patients"
        ],
        "summary": "Updates a patient record",
        "description": "Updates a patient record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Sophia Adams"
                },
                "dob": {
                  "type": "string",
                  "example": "09/18/79"
                },
                "email": {
                  "type": "string",
                  "example": "sophia.adams@example.com"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "567 Maple Street"
                    },
                    "city": {
                      "type": "string",
                      "example": "Villageland"
                    },
                    "zip": {
                      "type": "string",
                      "example": "67890"
                    }
                  }
                },
                "phone": {
                  "type": "string",
                  "example": "555-789-2345"
                },
                "insurer": {
                  "type": "string",
                  "example": "National"
                },
                "request": {
                  "type": "string",
                  "example": "Morbi posuere enim quis ornare laoreet. Donec imperdiet lacus odio, ut sollicitudin velit vulputate non. Sed mattis dolor purus, vel efficitur metus porta vel. Donec in aliquam nisl. Suspendisse venenatis eros molestie nunc eleifend, vel euismod elit tincidunt."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The patient record has been updated successfully"
          },
          "400": {
            "description": "Invalid record ID or no patient record found with that id."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong while updating the patient record. Please check id."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Patients"
        ],
        "summary": "Deletes a patient record",
        "description": "Deletes a patient record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "The patient record has been deleted successfully."
          },
          "400": {
            "description": "Invalid record ID or no patient record found with that id."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Some error occurred while deleting the patient record."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      }
    },
    "/practitioners/": {
      "get": {
        "tags": [
          "Practitioners"
        ],
        "summary": "Gets all the practitioners",
        "description": "Gets all the practitioners",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Practitioner"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "No practitioners found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Practitioners"
        ],
        "summary": "Creates a practitioner",
        "description": "Creates a practitioner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jessica Wilson"
                },
                "specialization": {
                  "type": "string",
                  "example": "Cardiovascular Disease"
                },
                "dea_number": {
                  "type": "string",
                  "example": "C91224313"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "467 Elm Street"
                    },
                    "city": {
                      "type": "string",
                      "example": "Townsville"
                    },
                    "zip": {
                      "type": "string",
                      "example": "54321"
                    }
                  }
                },
                "phone": {
                  "type": "string",
                  "example": "555-333-701"
                },
                "email": {
                  "type": "string",
                  "example": "jessica.wilson@medical.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new practitioner has been added to the database"
          },
          "400": {
            "description": "Some error occurred while creating the practitioner record."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      }
    },
    "/practitioners/{id}": {
      "get": {
        "tags": [
          "Practitioners"
        ],
        "summary": "Gets a single practitioner by id",
        "description": "Gets a single practitioner by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Practitioner"
            }
          },
          "400": {
            "description": "Invalid record ID or no practitioner found with entered ID"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Practitioners"
        ],
        "summary": "Updates a practitioner record",
        "description": "Updates a practitioner record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jessica Wilson"
                },
                "specialization": {
                  "type": "string",
                  "example": "Cardiovascular Disease"
                },
                "dea_number": {
                  "type": "string",
                  "example": "C91224313"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "467 Elm Street"
                    },
                    "city": {
                      "type": "string",
                      "example": "Townsville"
                    },
                    "zip": {
                      "type": "string",
                      "example": "54321"
                    }
                  }
                },
                "phone": {
                  "type": "string",
                  "example": "555-333-701"
                },
                "email": {
                  "type": "string",
                  "example": "jessica.wilson@medical.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The practitioner record has been updated successfully"
          },
          "400": {
            "description": "Invalid record ID or no practitioner record found with that id."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong while updating the practitioner record. Please check id."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Practitioners"
        ],
        "summary": "Deletes a practitioner record",
        "description": "Deletes a practitioner record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "The practitioner record has been deleted successfully."
          },
          "400": {
            "description": "Invalid record ID or no practitioner record found with entered id."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Some error occurred while deleting the practitioner record."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      }
    },
    "/practitioners/zip/{zip}": {
      "get": {
        "tags": [
          "Practitioners"
        ],
        "summary": "Gets all the practitioners by Zip",
        "description": "Gets all the practitioners by Zip",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "zip",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Practitioner"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "No practitioners found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/newsletters/": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Gets all the newsletters subscribers",
        "description": "Gets all the newsletters subscribers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Newsletter"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "No newsletters subscriber found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Creates a newsletter subscriber",
        "description": "Creates a newsletter subscriber",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A newsletter subscriber has been added to the database"
          },
          "400": {
            "description": "Some error occurred while creating the newsletter subscriber."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      }
    },
    "/newsletters/{id}": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Gets a single newsletter by id",
        "description": "Gets a single newsletter subscriber by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Newsletter"
            }
          },
          "400": {
            "description": "Invalid record ID or no newsletter subscriber found with entered id."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Updates a newsletter subscriber",
        "description": "Updates a newsletter subscriber",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Newsletter subscriber has been updated successfully"
          },
          "400": {
            "description": "Invalid record ID or no newsletter subscriber with that id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong while updating the newsletter subscriber. Please check id."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Deletes a newsletter subscriber",
        "description": "Deletes a newsletter subscriber",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "The newsletter subscriber has been deleted successfully."
          },
          "400": {
            "description": "Invalid record ID or no newsletter subscriber with entered id."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Some error occurred while deleting the newsletter subscriber."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      }
    },
    "/comments/": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Gets all the comments",
        "description": "Gets all the comments",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "No comments found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Creates a comment",
        "description": "Creates a comment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new comment has been added to the database"
          },
          "400": {
            "description": "Some error occurred while creating the comment."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Gets a single comment by id",
        "description": "Gets a single comment by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Invalid record ID or no comment found with the entered id."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Comments"
        ],
        "summary": "Updates a comment",
        "description": "Updates a comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Comment has been updated successfully"
          },
          "400": {
            "description": "Invalid record ID or no comment with that id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong while updating the comment. Please check id."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Deletes a comment",
        "description": "Deletes a comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "The comment has been deleted successfully."
          },
          "400": {
            "description": "Invalid record ID or no comment with that id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Some error occurred while deleting the comment."
          }
        },
        "security": [
          {
            "OAuth2": [
              "user"
            ]
          }
        ]
      }
    },
    "/zips/": {
      "get": {
        "tags": [
          "Zip Codes"
        ],
        "summary": "Gets all the zip codes on the database",
        "description": "Gets all the zip codes on the database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "zips": {
                  "type": "array",
                  "example": [
                    "1234"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "No zip codes found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Comment": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "67a15593581f535664c32de7"
        },
        "name": {
          "type": "string",
          "example": "Jason Born"
        },
        "username": {
          "type": "string",
          "example": "jasonborn"
        },
        "email": {
          "type": "string",
          "example": "jason.bourne@example.com"
        },
        "comment": {
          "type": "string",
          "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit..."
        }
      }
    },
    "Newsletter": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "67a15593581f535664c32de7"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        }
      }
    },
    "Patient": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "679e801fa04d19f37756ea79"
        },
        "name": {
          "type": "string",
          "example": "Sophia Adams"
        },
        "dob": {
          "type": "string",
          "example": "09/18/79"
        },
        "email": {
          "type": "string",
          "example": "sophia.adams@example.com"
        },
        "address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string",
              "example": "567 Maple Street"
            },
            "city": {
              "type": "string",
              "example": "Villageland"
            },
            "zip": {
              "type": "string",
              "example": "67890"
            }
          }
        },
        "phone": {
          "type": "string",
          "example": "555-789-2345"
        },
        "insurer": {
          "type": "string",
          "example": "National"
        },
        "request": {
          "type": "string",
          "example": "Morbi posuere enim quis ornare laoreet. Donec imperdiet lacus odio, ut sollicitudin velit vulputate non. Sed mattis dolor purus, vel efficitur metus porta vel. Donec in aliquam nisl. Suspendisse venenatis eros molestie nunc eleifend, vel euismod elit tincidunt."
        }
      }
    },
    "Practitioner": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "679e903aa04d19f37756eafa"
        },
        "name": {
          "type": "string",
          "example": "Jessica Wilson"
        },
        "specialization": {
          "type": "string",
          "example": "Cardiovascular Disease"
        },
        "dea_number": {
          "type": "string",
          "example": "C91224313"
        },
        "address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string",
              "example": "467 Elm Street"
            },
            "city": {
              "type": "string",
              "example": "Townsville"
            },
            "zip": {
              "type": "string",
              "example": "54321"
            }
          }
        },
        "phone": {
          "type": "string",
          "example": "555-333-701"
        },
        "email": {
          "type": "string",
          "example": "jessica.wilson@medical.com"
        }
      }
    }
  },
  "security": [
    {
      "OAuth2": [
        "user"
      ]
    }
  ]
}